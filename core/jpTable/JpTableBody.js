"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _core = require("@material-ui/core");

var _Create = _interopRequireDefault(require("@material-ui/icons/Create"));

var _DeleteSharp = _interopRequireDefault(require("@material-ui/icons/DeleteSharp"));

var _store = require("./store/store");

var _JpTableStyles = require("./styles/JpTableStyles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var useStyles = (0, _styles.makeStyles)(_JpTableStyles.JpTableStyles);

function desc(a, b, orderBy) {
  if (b[orderBy] < a[orderBy]) {
    return -1;
  }

  if (b[orderBy] > a[orderBy]) {
    return 1;
  }

  return 0;
}

function stableSort(array, cmp) {
  var stabilizedThis = array.map(function (el, index) {
    return [el, index];
  });
  stabilizedThis.sort(function (a, b) {
    var order = cmp(a[0], b[0]);
    if (order !== 0) return order;
    return a[1] - b[1];
  });
  return stabilizedThis.map(function (el) {
    return el[0];
  });
}

function getSorting(order, orderBy) {
  return order === "desc" ? function (a, b) {
    return desc(a, b, orderBy);
  } : function (a, b) {
    return -desc(a, b, orderBy);
  };
}

function JpTableBody(_ref) {
  var columnsData = _ref.columnsData,
      tableSetting = _ref.tableSetting,
      usersData = _ref.usersData,
      searchSwitch = _ref.searchSwitch,
      handleClick = _ref.handleClick,
      onEditClick = _ref.onEditClick,
      onRemoveClick = _ref.onRemoveClick;
  var classes = useStyles(); //context API START

  var _React$useContext = _react.default.useContext(_store.MainTableContext),
      state = _React$useContext.state;

  var order = state.order,
      orderBy = state.orderBy,
      selected = state.selected,
      page = state.page,
      rowsPerPage = state.rowsPerPage,
      searchTerm = state.searchTerm,
      multiSearchTerms = state.multiSearchTerms; //context API END

  var isSelected = function isSelected(id) {
    return selected.indexOf(id) !== -1;
  };

  var emptyRows = rowsPerPage - Math.min(rowsPerPage, usersData.length - page * rowsPerPage);
  return _react.default.createElement(_core.TableBody, null, stableSort(searchSwitch(searchTerm, multiSearchTerms, usersData), getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row, index) {
    var isItemSelected = isSelected(row.id);
    var labelId = "enhanced-table-checkbox-".concat(index);
    return _react.default.createElement(_core.TableRow, {
      hover: true,
      role: "checkbox",
      "aria-checked": isItemSelected,
      tabIndex: -1,
      key: index,
      selected: isItemSelected
    }, _react.default.createElement(_core.TableCell, {
      padding: "checkbox"
    }, _react.default.createElement(_core.Checkbox, {
      checked: isItemSelected,
      inputProps: {
        "aria-labelledby": labelId
      },
      onClick: function onClick(event) {
        return handleClick(event, row.id);
      }
    })), columnsData.map(function (data, index) {
      return _react.default.createElement(_core.TableCell, {
        component: "th",
        key: index
      }, row[columnsData[index].id]);
    }), tableSetting.hasEditing ? _react.default.createElement(_core.TableCell, {
      className: classes.tableCell
    }, _react.default.createElement(_Create.default, {
      onClick: function onClick() {
        onEditClick(row);
      }
    })) : null, tableSetting.hasDeleting ? _react.default.createElement(_core.TableCell, {
      className: classes.tableCell
    }, _react.default.createElement(_DeleteSharp.default, {
      onClick: function onClick() {
        onRemoveClick(row);
      }
    })) : null);
  }), emptyRows > 0 && _react.default.createElement(_core.TableRow, {
    style: {
      height: 49 * emptyRows
    }
  }, _react.default.createElement(_core.TableCell, {
    colSpan: 6
  })));
}

JpTableBody.prototypes = {
  columnsData: _propTypes.default.array.isRequired,
  tableSetting: _propTypes.default.object.isRequired,
  usersData: _propTypes.default.array.isRequired,
  searchSwitch: _propTypes.default.func.isRequired,
  handleClick: _propTypes.default.func.isRequired,
  onEditClick: _propTypes.default.func,
  onRemoveClick: _propTypes.default.func
};
var _default = JpTableBody;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,